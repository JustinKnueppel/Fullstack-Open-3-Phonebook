{"version":3,"sources":["services/personService.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["axios","defaults","baseURL","getAll","a","get","response","data","addPerson","person","post","deletePerson","id","delete","replacePerson","put","Person","name","number","Persons","persons","map","key","onClick","PersonForm","props","className","value","newName","onChange","setNameField","newNumber","setNumberField","type","Filter","nameFilter","setNameFilterField","Notification","text","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","notificationText","setNotificationText","notificationType","setNotificationType","useEffect","personService","then","peopleToShow","filter","toLowerCase","includes","resetNotification","event","target","preventDefault","newPerson","duplicatePerson","console","log","window","confirm","find","modifiedPerson","setTimeout","catch","error","errorMessage","savedPerson","document","querySelector","focus","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6586a7ec.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"/api\";\n\nconst getAll = async () => {\n  const response = await axios.get(\"/persons\");\n  return response.data;\n};\n\nconst addPerson = async (person) => {\n  const response = await axios.post(\"/persons\", person);\n  return response.data;\n};\n\nconst deletePerson = async (id) => {\n    const response = await axios.delete(`/persons/${id}`);\n    return response.data;\n};\n\nconst replacePerson = async (id, person) => {\n  const response = await axios.put(`/persons/${id}`, person);\n  return response.data;\n};\n\nexport default { getAll, addPerson, deletePerson, replacePerson };\n","import React from \"react\";\n\nconst Person = ({ person }) => (\n  <span>\n    {person.name}: {person.number}\n  </span>\n);\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, deletePerson }) => (\n  <ul>\n    {persons.map((person) => (\n      <li key={person.id}>\n        <Person person={person} />\n        <button onClick={deletePerson(person)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default Persons;\n","import React from \"react\";\n\nconst PersonForm = (props) => (\n  <form className=\"phonebook-form\">\n    <div>\n      name: <input value={props.newName} onChange={props.setNameField} />\n      <br />\n      number: <input value={props.newNumber} onChange={props.setNumberField} />\n    </div>\n    <div>\n      <button type=\"submit\" onClick={props.addPerson}>\n        add\n      </button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Filter = (props) => (\n  <>\n    Filter shown with{\" \"}\n    <input value={props.nameFilter} onChange={props.setNameFilterField} />\n  </>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ text, type }) => {\n  if (text === null || type === null) {\n    return null;\n  }\n  return <div className={type}>{text}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\n\nimport personService from \"./services/personService\";\n\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [notificationType, setNotificationType] = useState(\"\");\n\n  /* Set initial state of application */\n  useEffect(() => {\n    personService.getAll().then((persons) => {\n      setPersons(persons);\n    });\n  }, []);\n\n  /* Filter people based on name */\n  const peopleToShow = persons.filter((person) =>\n    person.name.toLowerCase().includes(nameFilter.toLowerCase())\n  );\n\n  const setNameField = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const setNumberField = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const setNameFilterField = (event) => {\n    setNameFilter(event.target.value);\n  };\n\n  const resetNotification = () => {\n    setNotificationText(\"\");\n    setNotificationType(\"\");\n  };\n\n  const duplicatePerson = (persons, newName) =>\n    persons.map((person) => person.name).includes(newName);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const newPerson = { name: newName, number: newNumber };\n\n    if (duplicatePerson(persons, newName)) {\n      console.log(\"duplicate person\", newName)\n      if (window.confirm(`Override phone number of ${newName}?`)) {\n        /* ID of person already in DB */\n        const id = persons.find((person) => person.name === newName).id;\n        personService\n          .replacePerson(id, newPerson)\n          .then((modifiedPerson) => {\n            setNotificationType(\"success\");\n            setNotificationText(\n              `Changed ${modifiedPerson.name}'s number to ${modifiedPerson.number}`\n              );\n              /* Update frontend data */\n            setPersons(\n              persons.map((person) =>\n                person.id === id ? modifiedPerson : person\n              )\n            );\n\n            setTimeout(resetNotification, 5000);\n          })\n          .catch((error) => {\n            console.log(error.response.data);\n            const errorMessage = error.response.data.error;\n            setNotificationType(\"error\");\n            setNotificationText(errorMessage);\n          });\n      }\n      return;\n    }\n    personService\n      .addPerson(newPerson)\n      .then((savedPerson) => {\n        setNotificationType(\"success\");\n        setNotificationText(`Added ${newPerson.name} to phonebook`);\n        setPersons([...persons, savedPerson]);\n\n        /* Reset form fields */\n        setNewName(\"\");\n        setNewNumber(\"\");\n\n        /* Focus first input */\n        const firstInput = document.querySelector(\"form.phonebook-form input\");\n        firstInput.focus();\n\n        setTimeout(resetNotification, 5000);\n      })\n      .catch((error) => {\n        console.log(error.response.data);\n        const errorMessage = error.response.data.error;\n        setNotificationType(\"error\");\n        setNotificationText(errorMessage);\n\n        setTimeout(resetNotification, 5000);\n        return;\n      });\n  };\n\n  const deletePerson = ({ name, id }) => () => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService\n        .deletePerson(id)\n        .then((data) => {\n          console.log(data);\n          setNotificationType(\"success\");\n          setNotificationText(`Deleted ${name} from phonebook`);\n          setPersons(persons.filter((person) => person.id !== id));\n          setTimeout(resetNotification, 5000);\n        })\n        .catch((error) => {\n          console.log(error.response.data);\n          const errorMessage = error.response.data.error;\n          setNotificationType(\"error\");\n          setNotificationText(errorMessage);\n\n          setTimeout(resetNotification, 5000);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification text={notificationText} type={notificationType} />\n      <Filter nameFilter={nameFilter} setNameFilterField={setNameFilterField} />\n      <h2>Add new</h2>\n      <PersonForm\n        newName={newName}\n        setNameField={setNameField}\n        newNumber={newNumber}\n        setNumberField={setNumberField}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={peopleToShow} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}