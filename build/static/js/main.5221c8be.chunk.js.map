{"version":3,"sources":["services/personService.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["axios","defaults","baseURL","getAll","a","get","response","data","addPerson","person","post","deletePerson","id","delete","status","replacePerson","put","Person","name","number","Persons","persons","map","key","onClick","PersonForm","props","className","value","newName","onChange","setNameField","newNumber","setNumberField","type","Filter","nameFilter","setNameFilterField","Notification","text","App","useState","setPersons","setNewName","setNewNumber","setNameFilter","notificationText","setNotificationText","notificationType","setNotificationType","useEffect","personService","then","peopleToShow","filter","toLowerCase","includes","resetNotification","event","target","preventDefault","newPerson","duplicatePerson","window","confirm","find","modifiedPerson","Object","keys","length","setTimeout","document","querySelector","focus","catch","error","console","log","success","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5221c8be.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"/api\";\n\nconst getAll = async () => {\n  const response = await axios.get(\"/persons\");\n  return response.data;\n};\n\nconst addPerson = async (person) => {\n  const response = await axios.post(\"/persons\", person);\n  return response.data;\n};\n\nconst deletePerson = async (id) => {\n  try {\n    const response = await axios.delete(`/persons/${id}`);\n    return response.status === 200;\n  } catch {\n    return false;\n  }\n};\n\nconst replacePerson = async (id, person) => {\n  try {\n    const response = await axios.put(`/persons/${id}`, person);\n    return response.data;\n  } catch {\n    return {};\n  }\n};\n\nexport default { getAll, addPerson, deletePerson, replacePerson };\n","import React from \"react\";\n\nconst Person = ({ person }) => (\n  <span>\n    {person.name}: {person.number}\n  </span>\n);\n\nexport default Person;\n","import React from \"react\";\nimport Person from \"./Person\";\n\nconst Persons = ({ persons, deletePerson }) => (\n  <ul>\n    {persons.map((person) => (\n      <li key={person.id}>\n        <Person person={person} />\n        <button onClick={deletePerson(person)}>Delete</button>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default Persons;\n","import React from \"react\";\n\nconst PersonForm = (props) => (\n  <form className=\"phonebook-form\">\n    <div>\n      name: <input value={props.newName} onChange={props.setNameField} />\n      <br />\n      number: <input value={props.newNumber} onChange={props.setNumberField} />\n    </div>\n    <div>\n      <button type=\"submit\" onClick={props.addPerson}>\n        add\n      </button>\n    </div>\n  </form>\n);\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Filter = (props) => (\n  <>\n    Filter shown with{\" \"}\n    <input value={props.nameFilter} onChange={props.setNameFilterField} />\n  </>\n);\n\nexport default Filter;\n","import React from \"react\";\n\nconst Notification = ({ text, type }) => {\n  if (text === null || type === null) {\n    return null;\n  }\n  return <div className={type}>{text}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\n\nimport personService from \"./services/personService\";\n\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [notificationText, setNotificationText] = useState(\"\");\n  const [notificationType, setNotificationType] = useState(\"\");\n\n  /* Set initial state of application */\n  useEffect(() => {\n    personService.getAll().then((persons) => {\n      setPersons(persons);\n    });\n  }, []);\n\n  /* Filter people based on name */\n  const peopleToShow = persons.filter((person) =>\n    person.name.toLowerCase().includes(nameFilter.toLowerCase())\n  );\n\n  const setNameField = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const setNumberField = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const setNameFilterField = (event) => {\n    setNameFilter(event.target.value);\n  };\n\n  const resetNotification = () => {\n    setNotificationText(\"\");\n    setNotificationType(\"\");\n  };\n\n  const duplicatePerson = (persons, newName) =>\n    persons.map((person) => person.name).includes(newName);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const newPerson = { name: newName, number: newNumber };\n\n    if (duplicatePerson(persons, newName)) {\n      if (window.confirm(`Override phone number of ${newName}?`)) {\n        /* ID of person already in DB */\n        const id = persons.find((person) => person.name === newName).id;\n        personService.replacePerson(id, newPerson).then((modifiedPerson) => {\n          if (Object.keys(modifiedPerson).length === 0) {\n            setNotificationType(\"error\");\n            setNotificationText(`${newPerson.name} not successfully modified`);\n\n            setTimeout(resetNotification, 5000);\n            return;\n          }\n          /* Update frontend data */\n          setNotificationType(\"success\");\n          setNotificationText(\n            `Changed ${modifiedPerson.name}'s number to ${modifiedPerson.number}`\n          );\n          setPersons(\n            persons.map((person) =>\n              person.id === id ? modifiedPerson : person\n            )\n          );\n\n          setTimeout(resetNotification, 5000);\n        });\n      }\n      return;\n    }\n    personService.addPerson(newPerson).then(({ id }) => {\n      if (!id) {\n        setNotificationType(\"error\");\n        setNotificationText(`${newPerson.name} not successfully added`);\n\n        setTimeout(resetNotification, 5000);\n        return;\n      }\n      setNotificationType(\"success\");\n      setNotificationText(`Added ${newPerson.name} to phonebook`);\n      setPersons([...persons, { ...newPerson, id }]);\n\n      /* Reset form fields */\n      setNewName(\"\");\n      setNewNumber(\"\");\n\n      /* Focus first input */\n      const firstInput = document.querySelector(\"form.phonebook-form input\");\n      firstInput.focus();\n\n      setTimeout(resetNotification, 5000);\n    }).catch(error => {\n      console.log(error)\n      setNotificationType(\"error\");\n      setNotificationText(`${newPerson.name} not successfully added`);\n\n      setTimeout(resetNotification, 5000);\n      return;\n    });\n  };\n\n  const deletePerson = ({ name, id }) => () => {\n    if (window.confirm(`Delete ${name}?`)) {\n      personService.deletePerson(id).then((success) => {\n        if (!success) {\n          setNotificationType(\"error\");\n          setNotificationText(`Failed to delete ${name} from phonebook`);\n          setTimeout(resetNotification, 5000);\n          return;\n        }\n        setNotificationType(\"success\");\n        setNotificationText(`Deleted ${name} from phonebook`);\n        setPersons(persons.filter((person) => person.id !== id));\n        setTimeout(resetNotification, 5000);\n      });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification text={notificationText} type={notificationType} />\n      <Filter nameFilter={nameFilter} setNameFilterField={setNameFilterField} />\n      <h2>Add new</h2>\n      <PersonForm\n        newName={newName}\n        setNameField={setNameField}\n        newNumber={newNumber}\n        setNumberField={setNumberField}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons persons={peopleToShow} deletePerson={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}